// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#include "proto.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Word_proto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WordInReview_proto_2eproto;
namespace api {
class InitParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InitParams> _instance;
} _InitParams_default_instance_;
class ReqRecentWordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqRecentWords> _instance;
} _ReqRecentWords_default_instance_;
class RespRecentWordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespRecentWords> _instance;
} _RespRecentWords_default_instance_;
class ReqSearchWordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqSearchWords> _instance;
} _ReqSearchWords_default_instance_;
class RespSearchWordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespSearchWords> _instance;
} _RespSearchWords_default_instance_;
class ReqRandWordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqRandWords> _instance;
} _ReqRandWords_default_instance_;
class RespRandWordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespRandWords> _instance;
} _RespRandWords_default_instance_;
class ReqWordInReviewDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqWordInReview> _instance;
} _ReqWordInReview_default_instance_;
class WordInReviewDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WordInReview> _instance;
} _WordInReview_default_instance_;
class ReqAddWordInReviewDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqAddWordInReview> _instance;
} _ReqAddWordInReview_default_instance_;
class RespAddWordInCurrentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespAddWordInCurrent> _instance;
} _RespAddWordInCurrent_default_instance_;
class ReqRemoveWordFromCurrentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqRemoveWordFromCurrent> _instance;
} _ReqRemoveWordFromCurrent_default_instance_;
class RespRemoveWordFromCurrentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespRemoveWordFromCurrent> _instance;
} _RespRemoveWordFromCurrent_default_instance_;
class ReqUpdateWordInCurrentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqUpdateWordInCurrent> _instance;
} _ReqUpdateWordInCurrent_default_instance_;
class RespUpdateWordInCurrentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespUpdateWordInCurrent> _instance;
} _RespUpdateWordInCurrent_default_instance_;
class WordDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Word> _instance;
} _Word_default_instance_;
class ReqReviewForTodayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqReviewForToday> _instance;
} _ReqReviewForToday_default_instance_;
class RespReviewForTodayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespReviewForToday> _instance;
} _RespReviewForToday_default_instance_;
class ReqSearchInReviewListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqSearchInReviewList> _instance;
} _ReqSearchInReviewList_default_instance_;
class RespSearchInReviewListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespSearchInReviewList> _instance;
} _RespSearchInReviewList_default_instance_;
class ReqDeleteProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqDeleteProfile> _instance;
} _ReqDeleteProfile_default_instance_;
class RespDeleteProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespDeleteProfile> _instance;
} _RespDeleteProfile_default_instance_;
class ReqSentencesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqSentences> _instance;
} _ReqSentences_default_instance_;
class RespSentencesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespSentences> _instance;
} _RespSentences_default_instance_;
class RespDefaultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RespDefault> _instance;
} _RespDefault_default_instance_;
}  // namespace api
static void InitDefaultsscc_info_InitParams_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_InitParams_default_instance_;
    new (ptr) ::api::InitParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::InitParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InitParams_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InitParams_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqAddWordInReview_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqAddWordInReview_default_instance_;
    new (ptr) ::api::ReqAddWordInReview();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqAddWordInReview::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqAddWordInReview_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqAddWordInReview_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqDeleteProfile_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqDeleteProfile_default_instance_;
    new (ptr) ::api::ReqDeleteProfile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqDeleteProfile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqDeleteProfile_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqDeleteProfile_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqRandWords_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqRandWords_default_instance_;
    new (ptr) ::api::ReqRandWords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqRandWords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqRandWords_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqRandWords_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqRecentWords_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqRecentWords_default_instance_;
    new (ptr) ::api::ReqRecentWords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqRecentWords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqRecentWords_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqRecentWords_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqRemoveWordFromCurrent_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqRemoveWordFromCurrent_default_instance_;
    new (ptr) ::api::ReqRemoveWordFromCurrent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqRemoveWordFromCurrent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqRemoveWordFromCurrent_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqRemoveWordFromCurrent_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqReviewForToday_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqReviewForToday_default_instance_;
    new (ptr) ::api::ReqReviewForToday();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqReviewForToday::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqReviewForToday_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqReviewForToday_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqSearchInReviewList_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqSearchInReviewList_default_instance_;
    new (ptr) ::api::ReqSearchInReviewList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqSearchInReviewList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqSearchInReviewList_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqSearchInReviewList_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqSearchWords_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqSearchWords_default_instance_;
    new (ptr) ::api::ReqSearchWords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqSearchWords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqSearchWords_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqSearchWords_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqSentences_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqSentences_default_instance_;
    new (ptr) ::api::ReqSentences();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqSentences::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqSentences_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqSentences_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqUpdateWordInCurrent_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqUpdateWordInCurrent_default_instance_;
    new (ptr) ::api::ReqUpdateWordInCurrent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqUpdateWordInCurrent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqUpdateWordInCurrent_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqUpdateWordInCurrent_proto_2eproto}, {}};

static void InitDefaultsscc_info_ReqWordInReview_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ReqWordInReview_default_instance_;
    new (ptr) ::api::ReqWordInReview();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ReqWordInReview::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqWordInReview_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReqWordInReview_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespAddWordInCurrent_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespAddWordInCurrent_default_instance_;
    new (ptr) ::api::RespAddWordInCurrent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespAddWordInCurrent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespAddWordInCurrent_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespAddWordInCurrent_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespDefault_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespDefault_default_instance_;
    new (ptr) ::api::RespDefault();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespDefault::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespDefault_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespDefault_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespDeleteProfile_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespDeleteProfile_default_instance_;
    new (ptr) ::api::RespDeleteProfile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespDeleteProfile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespDeleteProfile_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespDeleteProfile_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespRandWords_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespRandWords_default_instance_;
    new (ptr) ::api::RespRandWords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespRandWords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RespRandWords_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RespRandWords_proto_2eproto}, {
      &scc_info_Word_proto_2eproto.base,}};

static void InitDefaultsscc_info_RespRecentWords_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespRecentWords_default_instance_;
    new (ptr) ::api::RespRecentWords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespRecentWords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespRecentWords_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespRecentWords_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespRemoveWordFromCurrent_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespRemoveWordFromCurrent_default_instance_;
    new (ptr) ::api::RespRemoveWordFromCurrent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespRemoveWordFromCurrent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespRemoveWordFromCurrent_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespRemoveWordFromCurrent_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespReviewForToday_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespReviewForToday_default_instance_;
    new (ptr) ::api::RespReviewForToday();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespReviewForToday::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RespReviewForToday_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RespReviewForToday_proto_2eproto}, {
      &scc_info_WordInReview_proto_2eproto.base,}};

static void InitDefaultsscc_info_RespSearchInReviewList_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespSearchInReviewList_default_instance_;
    new (ptr) ::api::RespSearchInReviewList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespSearchInReviewList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RespSearchInReviewList_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RespSearchInReviewList_proto_2eproto}, {
      &scc_info_WordInReview_proto_2eproto.base,}};

static void InitDefaultsscc_info_RespSearchWords_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespSearchWords_default_instance_;
    new (ptr) ::api::RespSearchWords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespSearchWords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RespSearchWords_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RespSearchWords_proto_2eproto}, {
      &scc_info_Word_proto_2eproto.base,}};

static void InitDefaultsscc_info_RespSentences_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespSentences_default_instance_;
    new (ptr) ::api::RespSentences();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespSentences::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespSentences_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespSentences_proto_2eproto}, {}};

static void InitDefaultsscc_info_RespUpdateWordInCurrent_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RespUpdateWordInCurrent_default_instance_;
    new (ptr) ::api::RespUpdateWordInCurrent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RespUpdateWordInCurrent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RespUpdateWordInCurrent_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RespUpdateWordInCurrent_proto_2eproto}, {}};

static void InitDefaultsscc_info_Word_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Word_default_instance_;
    new (ptr) ::api::Word();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Word::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Word_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Word_proto_2eproto}, {}};

static void InitDefaultsscc_info_WordInReview_proto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_WordInReview_default_instance_;
    new (ptr) ::api::WordInReview();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::WordInReview::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WordInReview_proto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WordInReview_proto_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2eproto[25];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::api::InitParams, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::InitParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::InitParams, local_dir_),
  0,
  PROTOBUF_FIELD_OFFSET(::api::ReqRecentWords, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqRecentWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqRecentWords, desc_),
  PROTOBUF_FIELD_OFFSET(::api::ReqRecentWords, version_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespRecentWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespRecentWords, word_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchWords, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchWords, word_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchWords, use_like_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespSearchWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespSearchWords, item_),
  PROTOBUF_FIELD_OFFSET(::api::ReqRandWords, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqRandWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqRandWords, count_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespRandWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespRandWords, words_),
  PROTOBUF_FIELD_OFFSET(::api::ReqWordInReview, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqWordInReview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqWordInReview, word_),
  0,
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, word_),
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, success_count_),
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, fail_count_),
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, last_tm_success_),
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, last_tm_fail_),
  PROTOBUF_FIELD_OFFSET(::api::WordInReview, next_review_tm_ms_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, word_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, use_extra_fields_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, success_count_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, fail_count_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, last_tm_success_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, last_tm_fail_),
  PROTOBUF_FIELD_OFFSET(::api::ReqAddWordInReview, next_review_tm_ms_),
  0,
  1,
  2,
  6,
  3,
  4,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespAddWordInCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqRemoveWordFromCurrent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqRemoveWordFromCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqRemoveWordFromCurrent, word_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespRemoveWordFromCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, word_),
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, success_count_),
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, fail_count_),
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, last_tm_success_),
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, last_tm_fail_),
  PROTOBUF_FIELD_OFFSET(::api::ReqUpdateWordInCurrent, next_review_tm_ms_),
  0,
  1,
  2,
  3,
  4,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespUpdateWordInCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::Word, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::Word, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::Word, value_),
  PROTOBUF_FIELD_OFFSET(::api::Word, frequency_),
  PROTOBUF_FIELD_OFFSET(::api::Word, json_),
  PROTOBUF_FIELD_OFFSET(::api::Word, transcript_),
  0,
  3,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::ReqReviewForToday, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespReviewForToday, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::RespReviewForToday, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespReviewForToday, first_n_word_),
  PROTOBUF_FIELD_OFFSET(::api::RespReviewForToday, count_all_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchInReviewList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchInReviewList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchInReviewList, limit_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchInReviewList, offset_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSearchInReviewList, use_success_count_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespSearchInReviewList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespSearchInReviewList, word_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::ReqDeleteProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespDeleteProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqSentences, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSentences, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::ReqSentences, word_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSentences, limit_),
  PROTOBUF_FIELD_OFFSET(::api::ReqSentences, offset_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::RespSentences, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespSentences, data_),
  PROTOBUF_FIELD_OFFSET(::api::RespDefault, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::api::RespDefault, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::RespDefault, value_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::api::InitParams)},
  { 7, 14, sizeof(::api::ReqRecentWords)},
  { 16, -1, sizeof(::api::RespRecentWords)},
  { 22, 29, sizeof(::api::ReqSearchWords)},
  { 31, -1, sizeof(::api::RespSearchWords)},
  { 37, 43, sizeof(::api::ReqRandWords)},
  { 44, -1, sizeof(::api::RespRandWords)},
  { 50, 56, sizeof(::api::ReqWordInReview)},
  { 57, 68, sizeof(::api::WordInReview)},
  { 74, 86, sizeof(::api::ReqAddWordInReview)},
  { 93, -1, sizeof(::api::RespAddWordInCurrent)},
  { 98, 104, sizeof(::api::ReqRemoveWordFromCurrent)},
  { 105, -1, sizeof(::api::RespRemoveWordFromCurrent)},
  { 110, 121, sizeof(::api::ReqUpdateWordInCurrent)},
  { 127, -1, sizeof(::api::RespUpdateWordInCurrent)},
  { 132, 141, sizeof(::api::Word)},
  { 145, -1, sizeof(::api::ReqReviewForToday)},
  { 150, 157, sizeof(::api::RespReviewForToday)},
  { 159, 167, sizeof(::api::ReqSearchInReviewList)},
  { 170, -1, sizeof(::api::RespSearchInReviewList)},
  { 176, -1, sizeof(::api::ReqDeleteProfile)},
  { 181, -1, sizeof(::api::RespDeleteProfile)},
  { 186, 194, sizeof(::api::ReqSentences)},
  { 197, -1, sizeof(::api::RespSentences)},
  { 203, 209, sizeof(::api::RespDefault)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_InitParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqRecentWords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespRecentWords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqSearchWords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespSearchWords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqRandWords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespRandWords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqWordInReview_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_WordInReview_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqAddWordInReview_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespAddWordInCurrent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqRemoveWordFromCurrent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespRemoveWordFromCurrent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqUpdateWordInCurrent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespUpdateWordInCurrent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_Word_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqReviewForToday_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespReviewForToday_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqSearchInReviewList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespSearchInReviewList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqDeleteProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespDeleteProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_ReqSentences_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespSentences_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_RespDefault_default_instance_),
};

const char descriptor_table_protodef_proto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013proto.proto\022\003api\"\037\n\nInitParams\022\021\n\tloca"
  "l_dir\030\001 \001(\t\"/\n\016ReqRecentWords\022\014\n\004desc\030\001 "
  "\001(\t\022\017\n\007version\030\002 \001(\t\"\037\n\017RespRecentWords\022"
  "\014\n\004word\030\001 \003(\t\"0\n\016ReqSearchWords\022\014\n\004word\030"
  "\001 \001(\t\022\020\n\010use_like\030\002 \001(\010\"*\n\017RespSearchWor"
  "ds\022\027\n\004item\030\001 \003(\0132\t.api.Word\"\035\n\014ReqRandWo"
  "rds\022\r\n\005count\030\001 \001(\r\")\n\rRespRandWords\022\030\n\005w"
  "ords\030\001 \003(\0132\t.api.Word\"\037\n\017ReqWordInReview"
  "\022\014\n\004word\030\001 \001(\t\"\221\001\n\014WordInReview\022\014\n\004word\030"
  "\001 \001(\t\022\025\n\rsuccess_count\030\002 \001(\r\022\022\n\nfail_cou"
  "nt\030\003 \001(\r\022\027\n\017last_tm_success\030\004 \001(\004\022\024\n\014las"
  "t_tm_fail\030\005 \001(\004\022\031\n\021next_review_tm_ms\030\006 \001"
  "(\004\"\261\001\n\022ReqAddWordInReview\022\014\n\004word\030\001 \001(\t\022"
  "\030\n\020use_extra_fields\030\002 \001(\010\022\025\n\rsuccess_cou"
  "nt\030\003 \001(\r\022\022\n\nfail_count\030\004 \001(\r\022\027\n\017last_tm_"
  "success\030\005 \001(\004\022\024\n\014last_tm_fail\030\006 \001(\004\022\031\n\021n"
  "ext_review_tm_ms\030\007 \001(\004\"\026\n\024RespAddWordInC"
  "urrent\"(\n\030ReqRemoveWordFromCurrent\022\014\n\004wo"
  "rd\030\001 \001(\t\"\033\n\031RespRemoveWordFromCurrent\"\233\001"
  "\n\026ReqUpdateWordInCurrent\022\014\n\004word\030\001 \001(\t\022\025"
  "\n\rsuccess_count\030\002 \001(\r\022\022\n\nfail_count\030\003 \001("
  "\r\022\027\n\017last_tm_success\030\004 \001(\004\022\024\n\014last_tm_fa"
  "il\030\005 \001(\004\022\031\n\021next_review_tm_ms\030\006 \001(\004\"\031\n\027R"
  "espUpdateWordInCurrent\"J\n\004Word\022\r\n\005value\030"
  "\001 \001(\t\022\021\n\tfrequency\030\002 \001(\004\022\014\n\004json\030\003 \001(\t\022\022"
  "\n\ntranscript\030\004 \001(\t\"\023\n\021ReqReviewForToday\""
  "P\n\022RespReviewForToday\022\'\n\014first_n_word\030\001 "
  "\003(\0132\021.api.WordInReview\022\021\n\tcount_all\030\002 \001("
  "\r\"Q\n\025ReqSearchInReviewList\022\r\n\005limit\030\001 \001("
  "\r\022\016\n\006offset\030\002 \001(\r\022\031\n\021use_success_count\030\003"
  " \001(\r\"9\n\026RespSearchInReviewList\022\037\n\004word\030\001"
  " \003(\0132\021.api.WordInReview\"\022\n\020ReqDeleteProf"
  "ile\"\023\n\021RespDeleteProfile\";\n\014ReqSentences"
  "\022\014\n\004word\030\001 \001(\t\022\r\n\005limit\030\002 \001(\r\022\016\n\006offset\030"
  "\003 \001(\r\"\035\n\rRespSentences\022\014\n\004data\030\001 \003(\t\"\034\n\013"
  "RespDefault\022\r\n\005value\030\001 \001(\010"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2eproto_sccs[25] = {
  &scc_info_InitParams_proto_2eproto.base,
  &scc_info_ReqAddWordInReview_proto_2eproto.base,
  &scc_info_ReqDeleteProfile_proto_2eproto.base,
  &scc_info_ReqRandWords_proto_2eproto.base,
  &scc_info_ReqRecentWords_proto_2eproto.base,
  &scc_info_ReqRemoveWordFromCurrent_proto_2eproto.base,
  &scc_info_ReqReviewForToday_proto_2eproto.base,
  &scc_info_ReqSearchInReviewList_proto_2eproto.base,
  &scc_info_ReqSearchWords_proto_2eproto.base,
  &scc_info_ReqSentences_proto_2eproto.base,
  &scc_info_ReqUpdateWordInCurrent_proto_2eproto.base,
  &scc_info_ReqWordInReview_proto_2eproto.base,
  &scc_info_RespAddWordInCurrent_proto_2eproto.base,
  &scc_info_RespDefault_proto_2eproto.base,
  &scc_info_RespDeleteProfile_proto_2eproto.base,
  &scc_info_RespRandWords_proto_2eproto.base,
  &scc_info_RespRecentWords_proto_2eproto.base,
  &scc_info_RespRemoveWordFromCurrent_proto_2eproto.base,
  &scc_info_RespReviewForToday_proto_2eproto.base,
  &scc_info_RespSearchInReviewList_proto_2eproto.base,
  &scc_info_RespSearchWords_proto_2eproto.base,
  &scc_info_RespSentences_proto_2eproto.base,
  &scc_info_RespUpdateWordInCurrent_proto_2eproto.base,
  &scc_info_Word_proto_2eproto.base,
  &scc_info_WordInReview_proto_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2eproto = {
  false, false, descriptor_table_protodef_proto_2eproto, "proto.proto", 1426,
  &descriptor_table_proto_2eproto_once, descriptor_table_proto_2eproto_sccs, descriptor_table_proto_2eproto_deps, 25, 0,
  schemas, file_default_instances, TableStruct_proto_2eproto::offsets,
  file_level_metadata_proto_2eproto, 25, file_level_enum_descriptors_proto_2eproto, file_level_service_descriptors_proto_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2eproto)), true);
namespace api {

// ===================================================================

void InitParams::InitAsDefaultInstance() {
}
class InitParams::_Internal {
 public:
  using HasBits = decltype(std::declval<InitParams>()._has_bits_);
  static void set_has_local_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

InitParams::InitParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.InitParams)
}
InitParams::InitParams(const InitParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  local_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_local_dir()) {
    local_dir_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_local_dir(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:api.InitParams)
}

void InitParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InitParams_proto_2eproto.base);
  local_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InitParams::~InitParams() {
  // @@protoc_insertion_point(destructor:api.InitParams)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InitParams::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  local_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InitParams::ArenaDtor(void* object) {
  InitParams* _this = reinterpret_cast< InitParams* >(object);
  (void)_this;
}
void InitParams::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InitParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitParams& InitParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InitParams_proto_2eproto.base);
  return *internal_default_instance();
}


void InitParams::Clear() {
// @@protoc_insertion_point(message_clear_start:api.InitParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    local_dir_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InitParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string local_dir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_local_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.InitParams.local_dir");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InitParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.InitParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string local_dir = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_local_dir().data(), static_cast<int>(this->_internal_local_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.InitParams.local_dir");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_local_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.InitParams)
  return target;
}

size_t InitParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.InitParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string local_dir = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_dir());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.InitParams)
  GOOGLE_DCHECK_NE(&from, this);
  const InitParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InitParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.InitParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.InitParams)
    MergeFrom(*source);
  }
}

void InitParams::MergeFrom(const InitParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.InitParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_local_dir()) {
    _internal_set_local_dir(from._internal_local_dir());
  }
}

void InitParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.InitParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitParams::CopyFrom(const InitParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.InitParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitParams::IsInitialized() const {
  return true;
}

void InitParams::InternalSwap(InitParams* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  local_dir_.Swap(&other->local_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InitParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqRecentWords::InitAsDefaultInstance() {
}
class ReqRecentWords::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqRecentWords>()._has_bits_);
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ReqRecentWords::ReqRecentWords(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqRecentWords)
}
ReqRecentWords::ReqRecentWords(const ReqRecentWords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_desc()) {
    desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_desc(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:api.ReqRecentWords)
}

void ReqRecentWords::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqRecentWords_proto_2eproto.base);
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqRecentWords::~ReqRecentWords() {
  // @@protoc_insertion_point(destructor:api.ReqRecentWords)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqRecentWords::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqRecentWords::ArenaDtor(void* object) {
  ReqRecentWords* _this = reinterpret_cast< ReqRecentWords* >(object);
  (void)_this;
}
void ReqRecentWords::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqRecentWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqRecentWords& ReqRecentWords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqRecentWords_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqRecentWords::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqRecentWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqRecentWords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string desc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqRecentWords.desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqRecentWords.version");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqRecentWords::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqRecentWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string desc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqRecentWords.desc");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_desc(), target);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqRecentWords.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqRecentWords)
  return target;
}

size_t ReqRecentWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqRecentWords)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string desc = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_desc());
    }

    // optional string version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_version());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRecentWords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqRecentWords)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRecentWords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqRecentWords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqRecentWords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqRecentWords)
    MergeFrom(*source);
  }
}

void ReqRecentWords::MergeFrom(const ReqRecentWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqRecentWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
  }
}

void ReqRecentWords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqRecentWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRecentWords::CopyFrom(const ReqRecentWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqRecentWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRecentWords::IsInitialized() const {
  return true;
}

void ReqRecentWords::InternalSwap(ReqRecentWords* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  desc_.Swap(&other->desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqRecentWords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespRecentWords::InitAsDefaultInstance() {
}
class RespRecentWords::_Internal {
 public:
};

RespRecentWords::RespRecentWords(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  word_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespRecentWords)
}
RespRecentWords::RespRecentWords(const RespRecentWords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      word_(from.word_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespRecentWords)
}

void RespRecentWords::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RespRecentWords_proto_2eproto.base);
}

RespRecentWords::~RespRecentWords() {
  // @@protoc_insertion_point(destructor:api.RespRecentWords)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespRecentWords::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespRecentWords::ArenaDtor(void* object) {
  RespRecentWords* _this = reinterpret_cast< RespRecentWords* >(object);
  (void)_this;
}
void RespRecentWords::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespRecentWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespRecentWords& RespRecentWords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespRecentWords_proto_2eproto.base);
  return *internal_default_instance();
}


void RespRecentWords::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespRecentWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespRecentWords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_word();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.RespRecentWords.word");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespRecentWords::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespRecentWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string word = 1;
  for (int i = 0, n = this->_internal_word_size(); i < n; i++) {
    const auto& s = this->_internal_word(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.RespRecentWords.word");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespRecentWords)
  return target;
}

size_t RespRecentWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespRecentWords)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string word = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(word_.size());
  for (int i = 0, n = word_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      word_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespRecentWords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespRecentWords)
  GOOGLE_DCHECK_NE(&from, this);
  const RespRecentWords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespRecentWords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespRecentWords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespRecentWords)
    MergeFrom(*source);
  }
}

void RespRecentWords::MergeFrom(const RespRecentWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespRecentWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  word_.MergeFrom(from.word_);
}

void RespRecentWords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespRecentWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespRecentWords::CopyFrom(const RespRecentWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespRecentWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespRecentWords::IsInitialized() const {
  return true;
}

void RespRecentWords::InternalSwap(RespRecentWords* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  word_.InternalSwap(&other->word_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespRecentWords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqSearchWords::InitAsDefaultInstance() {
}
class ReqSearchWords::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqSearchWords>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_like(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ReqSearchWords::ReqSearchWords(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqSearchWords)
}
ReqSearchWords::ReqSearchWords(const ReqSearchWords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  use_like_ = from.use_like_;
  // @@protoc_insertion_point(copy_constructor:api.ReqSearchWords)
}

void ReqSearchWords::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqSearchWords_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  use_like_ = false;
}

ReqSearchWords::~ReqSearchWords() {
  // @@protoc_insertion_point(destructor:api.ReqSearchWords)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqSearchWords::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqSearchWords::ArenaDtor(void* object) {
  ReqSearchWords* _this = reinterpret_cast< ReqSearchWords* >(object);
  (void)_this;
}
void ReqSearchWords::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqSearchWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqSearchWords& ReqSearchWords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqSearchWords_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqSearchWords::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqSearchWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  use_like_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqSearchWords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqSearchWords.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_like = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_use_like(&has_bits);
          use_like_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqSearchWords::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqSearchWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqSearchWords.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  // optional bool use_like = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_use_like(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqSearchWords)
  return target;
}

size_t ReqSearchWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqSearchWords)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string word = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_word());
    }

    // optional bool use_like = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqSearchWords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqSearchWords)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqSearchWords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqSearchWords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqSearchWords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqSearchWords)
    MergeFrom(*source);
  }
}

void ReqSearchWords::MergeFrom(const ReqSearchWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqSearchWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_word(from._internal_word());
    }
    if (cached_has_bits & 0x00000002u) {
      use_like_ = from.use_like_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqSearchWords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqSearchWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSearchWords::CopyFrom(const ReqSearchWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqSearchWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSearchWords::IsInitialized() const {
  return true;
}

void ReqSearchWords::InternalSwap(ReqSearchWords* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(use_like_, other->use_like_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqSearchWords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespSearchWords::InitAsDefaultInstance() {
}
class RespSearchWords::_Internal {
 public:
};

RespSearchWords::RespSearchWords(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespSearchWords)
}
RespSearchWords::RespSearchWords(const RespSearchWords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_(from.item_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespSearchWords)
}

void RespSearchWords::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RespSearchWords_proto_2eproto.base);
}

RespSearchWords::~RespSearchWords() {
  // @@protoc_insertion_point(destructor:api.RespSearchWords)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespSearchWords::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespSearchWords::ArenaDtor(void* object) {
  RespSearchWords* _this = reinterpret_cast< RespSearchWords* >(object);
  (void)_this;
}
void RespSearchWords::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespSearchWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespSearchWords& RespSearchWords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespSearchWords_proto_2eproto.base);
  return *internal_default_instance();
}


void RespSearchWords::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespSearchWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespSearchWords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .api.Word item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespSearchWords::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespSearchWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.Word item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_item(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespSearchWords)
  return target;
}

size_t RespSearchWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespSearchWords)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.Word item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespSearchWords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespSearchWords)
  GOOGLE_DCHECK_NE(&from, this);
  const RespSearchWords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespSearchWords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespSearchWords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespSearchWords)
    MergeFrom(*source);
  }
}

void RespSearchWords::MergeFrom(const RespSearchWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespSearchWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void RespSearchWords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespSearchWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespSearchWords::CopyFrom(const RespSearchWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespSearchWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespSearchWords::IsInitialized() const {
  return true;
}

void RespSearchWords::InternalSwap(RespSearchWords* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  item_.InternalSwap(&other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespSearchWords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqRandWords::InitAsDefaultInstance() {
}
class ReqRandWords::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqRandWords>()._has_bits_);
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReqRandWords::ReqRandWords(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqRandWords)
}
ReqRandWords::ReqRandWords(const ReqRandWords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:api.ReqRandWords)
}

void ReqRandWords::SharedCtor() {
  count_ = 0u;
}

ReqRandWords::~ReqRandWords() {
  // @@protoc_insertion_point(destructor:api.ReqRandWords)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqRandWords::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReqRandWords::ArenaDtor(void* object) {
  ReqRandWords* _this = reinterpret_cast< ReqRandWords* >(object);
  (void)_this;
}
void ReqRandWords::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqRandWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqRandWords& ReqRandWords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqRandWords_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqRandWords::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqRandWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqRandWords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqRandWords::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqRandWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqRandWords)
  return target;
}

size_t ReqRandWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqRandWords)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 count = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRandWords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqRandWords)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRandWords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqRandWords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqRandWords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqRandWords)
    MergeFrom(*source);
  }
}

void ReqRandWords::MergeFrom(const ReqRandWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqRandWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_count()) {
    _internal_set_count(from._internal_count());
  }
}

void ReqRandWords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqRandWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRandWords::CopyFrom(const ReqRandWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqRandWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRandWords::IsInitialized() const {
  return true;
}

void ReqRandWords::InternalSwap(ReqRandWords* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqRandWords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespRandWords::InitAsDefaultInstance() {
}
class RespRandWords::_Internal {
 public:
};

RespRandWords::RespRandWords(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  words_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespRandWords)
}
RespRandWords::RespRandWords(const RespRandWords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      words_(from.words_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespRandWords)
}

void RespRandWords::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RespRandWords_proto_2eproto.base);
}

RespRandWords::~RespRandWords() {
  // @@protoc_insertion_point(destructor:api.RespRandWords)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespRandWords::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespRandWords::ArenaDtor(void* object) {
  RespRandWords* _this = reinterpret_cast< RespRandWords* >(object);
  (void)_this;
}
void RespRandWords::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespRandWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespRandWords& RespRandWords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespRandWords_proto_2eproto.base);
  return *internal_default_instance();
}


void RespRandWords::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespRandWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespRandWords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .api.Word words = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_words(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespRandWords::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespRandWords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.Word words = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_words_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_words(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespRandWords)
  return target;
}

size_t RespRandWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespRandWords)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.Word words = 1;
  total_size += 1UL * this->_internal_words_size();
  for (const auto& msg : this->words_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespRandWords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespRandWords)
  GOOGLE_DCHECK_NE(&from, this);
  const RespRandWords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespRandWords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespRandWords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespRandWords)
    MergeFrom(*source);
  }
}

void RespRandWords::MergeFrom(const RespRandWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespRandWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
}

void RespRandWords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespRandWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespRandWords::CopyFrom(const RespRandWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespRandWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespRandWords::IsInitialized() const {
  return true;
}

void RespRandWords::InternalSwap(RespRandWords* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  words_.InternalSwap(&other->words_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespRandWords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqWordInReview::InitAsDefaultInstance() {
}
class ReqWordInReview::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqWordInReview>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReqWordInReview::ReqWordInReview(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqWordInReview)
}
ReqWordInReview::ReqWordInReview(const ReqWordInReview& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:api.ReqWordInReview)
}

void ReqWordInReview::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqWordInReview_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqWordInReview::~ReqWordInReview() {
  // @@protoc_insertion_point(destructor:api.ReqWordInReview)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqWordInReview::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqWordInReview::ArenaDtor(void* object) {
  ReqWordInReview* _this = reinterpret_cast< ReqWordInReview* >(object);
  (void)_this;
}
void ReqWordInReview::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqWordInReview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqWordInReview& ReqWordInReview::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqWordInReview_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqWordInReview::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqWordInReview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqWordInReview::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqWordInReview.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqWordInReview::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqWordInReview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqWordInReview.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqWordInReview)
  return target;
}

size_t ReqWordInReview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqWordInReview)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string word = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_word());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqWordInReview::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqWordInReview)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqWordInReview* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqWordInReview>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqWordInReview)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqWordInReview)
    MergeFrom(*source);
  }
}

void ReqWordInReview::MergeFrom(const ReqWordInReview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqWordInReview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_word()) {
    _internal_set_word(from._internal_word());
  }
}

void ReqWordInReview::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqWordInReview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqWordInReview::CopyFrom(const ReqWordInReview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqWordInReview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqWordInReview::IsInitialized() const {
  return true;
}

void ReqWordInReview::InternalSwap(ReqWordInReview* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqWordInReview::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WordInReview::InitAsDefaultInstance() {
}
class WordInReview::_Internal {
 public:
  using HasBits = decltype(std::declval<WordInReview>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_success_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fail_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_last_tm_success(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_tm_fail(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_next_review_tm_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

WordInReview::WordInReview(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.WordInReview)
}
WordInReview::WordInReview(const WordInReview& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  ::memcpy(&success_count_, &from.success_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_review_tm_ms_) -
    reinterpret_cast<char*>(&success_count_)) + sizeof(next_review_tm_ms_));
  // @@protoc_insertion_point(copy_constructor:api.WordInReview)
}

void WordInReview::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WordInReview_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_review_tm_ms_) -
      reinterpret_cast<char*>(&success_count_)) + sizeof(next_review_tm_ms_));
}

WordInReview::~WordInReview() {
  // @@protoc_insertion_point(destructor:api.WordInReview)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WordInReview::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WordInReview::ArenaDtor(void* object) {
  WordInReview* _this = reinterpret_cast< WordInReview* >(object);
  (void)_this;
}
void WordInReview::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WordInReview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WordInReview& WordInReview::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WordInReview_proto_2eproto.base);
  return *internal_default_instance();
}


void WordInReview::Clear() {
// @@protoc_insertion_point(message_clear_start:api.WordInReview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&success_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&next_review_tm_ms_) -
        reinterpret_cast<char*>(&success_count_)) + sizeof(next_review_tm_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WordInReview::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.WordInReview.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 success_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_success_count(&has_bits);
          success_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 fail_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fail_count(&has_bits);
          fail_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_tm_success = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_last_tm_success(&has_bits);
          last_tm_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_tm_fail = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_last_tm_fail(&has_bits);
          last_tm_fail_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 next_review_tm_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_next_review_tm_ms(&has_bits);
          next_review_tm_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WordInReview::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.WordInReview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.WordInReview.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  // optional uint32 success_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_success_count(), target);
  }

  // optional uint32 fail_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_fail_count(), target);
  }

  // optional uint64 last_tm_success = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_last_tm_success(), target);
  }

  // optional uint64 last_tm_fail = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_last_tm_fail(), target);
  }

  // optional uint64 next_review_tm_ms = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_next_review_tm_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.WordInReview)
  return target;
}

size_t WordInReview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.WordInReview)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string word = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_word());
    }

    // optional uint32 success_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_success_count());
    }

    // optional uint32 fail_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_fail_count());
    }

    // optional uint64 last_tm_success = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_tm_success());
    }

    // optional uint64 last_tm_fail = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_tm_fail());
    }

    // optional uint64 next_review_tm_ms = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_next_review_tm_ms());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WordInReview::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.WordInReview)
  GOOGLE_DCHECK_NE(&from, this);
  const WordInReview* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WordInReview>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.WordInReview)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.WordInReview)
    MergeFrom(*source);
  }
}

void WordInReview::MergeFrom(const WordInReview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.WordInReview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_word(from._internal_word());
    }
    if (cached_has_bits & 0x00000002u) {
      success_count_ = from.success_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      fail_count_ = from.fail_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      last_tm_success_ = from.last_tm_success_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_tm_fail_ = from.last_tm_fail_;
    }
    if (cached_has_bits & 0x00000020u) {
      next_review_tm_ms_ = from.next_review_tm_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WordInReview::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.WordInReview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WordInReview::CopyFrom(const WordInReview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.WordInReview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordInReview::IsInitialized() const {
  return true;
}

void WordInReview::InternalSwap(WordInReview* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WordInReview, next_review_tm_ms_)
      + sizeof(WordInReview::next_review_tm_ms_)
      - PROTOBUF_FIELD_OFFSET(WordInReview, success_count_)>(
          reinterpret_cast<char*>(&success_count_),
          reinterpret_cast<char*>(&other->success_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WordInReview::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqAddWordInReview::InitAsDefaultInstance() {
}
class ReqAddWordInReview::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqAddWordInReview>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_extra_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_success_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_fail_count(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_last_tm_success(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_tm_fail(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_next_review_tm_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

ReqAddWordInReview::ReqAddWordInReview(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqAddWordInReview)
}
ReqAddWordInReview::ReqAddWordInReview(const ReqAddWordInReview& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  ::memcpy(&use_extra_fields_, &from.use_extra_fields_,
    static_cast<size_t>(reinterpret_cast<char*>(&fail_count_) -
    reinterpret_cast<char*>(&use_extra_fields_)) + sizeof(fail_count_));
  // @@protoc_insertion_point(copy_constructor:api.ReqAddWordInReview)
}

void ReqAddWordInReview::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqAddWordInReview_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&use_extra_fields_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fail_count_) -
      reinterpret_cast<char*>(&use_extra_fields_)) + sizeof(fail_count_));
}

ReqAddWordInReview::~ReqAddWordInReview() {
  // @@protoc_insertion_point(destructor:api.ReqAddWordInReview)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqAddWordInReview::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqAddWordInReview::ArenaDtor(void* object) {
  ReqAddWordInReview* _this = reinterpret_cast< ReqAddWordInReview* >(object);
  (void)_this;
}
void ReqAddWordInReview::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqAddWordInReview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqAddWordInReview& ReqAddWordInReview::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqAddWordInReview_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqAddWordInReview::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqAddWordInReview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&use_extra_fields_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fail_count_) -
        reinterpret_cast<char*>(&use_extra_fields_)) + sizeof(fail_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqAddWordInReview::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqAddWordInReview.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_extra_fields = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_use_extra_fields(&has_bits);
          use_extra_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 success_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_success_count(&has_bits);
          success_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 fail_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_fail_count(&has_bits);
          fail_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_tm_success = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_last_tm_success(&has_bits);
          last_tm_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_tm_fail = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_last_tm_fail(&has_bits);
          last_tm_fail_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 next_review_tm_ms = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_next_review_tm_ms(&has_bits);
          next_review_tm_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqAddWordInReview::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqAddWordInReview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqAddWordInReview.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  // optional bool use_extra_fields = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_use_extra_fields(), target);
  }

  // optional uint32 success_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_success_count(), target);
  }

  // optional uint32 fail_count = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_fail_count(), target);
  }

  // optional uint64 last_tm_success = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_last_tm_success(), target);
  }

  // optional uint64 last_tm_fail = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_last_tm_fail(), target);
  }

  // optional uint64 next_review_tm_ms = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_next_review_tm_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqAddWordInReview)
  return target;
}

size_t ReqAddWordInReview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqAddWordInReview)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string word = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_word());
    }

    // optional bool use_extra_fields = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional uint32 success_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_success_count());
    }

    // optional uint64 last_tm_success = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_tm_success());
    }

    // optional uint64 last_tm_fail = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_tm_fail());
    }

    // optional uint64 next_review_tm_ms = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_next_review_tm_ms());
    }

    // optional uint32 fail_count = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_fail_count());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqAddWordInReview::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqAddWordInReview)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqAddWordInReview* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqAddWordInReview>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqAddWordInReview)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqAddWordInReview)
    MergeFrom(*source);
  }
}

void ReqAddWordInReview::MergeFrom(const ReqAddWordInReview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqAddWordInReview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_word(from._internal_word());
    }
    if (cached_has_bits & 0x00000002u) {
      use_extra_fields_ = from.use_extra_fields_;
    }
    if (cached_has_bits & 0x00000004u) {
      success_count_ = from.success_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      last_tm_success_ = from.last_tm_success_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_tm_fail_ = from.last_tm_fail_;
    }
    if (cached_has_bits & 0x00000020u) {
      next_review_tm_ms_ = from.next_review_tm_ms_;
    }
    if (cached_has_bits & 0x00000040u) {
      fail_count_ = from.fail_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqAddWordInReview::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqAddWordInReview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAddWordInReview::CopyFrom(const ReqAddWordInReview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqAddWordInReview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAddWordInReview::IsInitialized() const {
  return true;
}

void ReqAddWordInReview::InternalSwap(ReqAddWordInReview* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqAddWordInReview, fail_count_)
      + sizeof(ReqAddWordInReview::fail_count_)
      - PROTOBUF_FIELD_OFFSET(ReqAddWordInReview, use_extra_fields_)>(
          reinterpret_cast<char*>(&use_extra_fields_),
          reinterpret_cast<char*>(&other->use_extra_fields_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqAddWordInReview::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespAddWordInCurrent::InitAsDefaultInstance() {
}
class RespAddWordInCurrent::_Internal {
 public:
};

RespAddWordInCurrent::RespAddWordInCurrent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespAddWordInCurrent)
}
RespAddWordInCurrent::RespAddWordInCurrent(const RespAddWordInCurrent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespAddWordInCurrent)
}

void RespAddWordInCurrent::SharedCtor() {
}

RespAddWordInCurrent::~RespAddWordInCurrent() {
  // @@protoc_insertion_point(destructor:api.RespAddWordInCurrent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespAddWordInCurrent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespAddWordInCurrent::ArenaDtor(void* object) {
  RespAddWordInCurrent* _this = reinterpret_cast< RespAddWordInCurrent* >(object);
  (void)_this;
}
void RespAddWordInCurrent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespAddWordInCurrent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespAddWordInCurrent& RespAddWordInCurrent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespAddWordInCurrent_proto_2eproto.base);
  return *internal_default_instance();
}


void RespAddWordInCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespAddWordInCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespAddWordInCurrent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespAddWordInCurrent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespAddWordInCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespAddWordInCurrent)
  return target;
}

size_t RespAddWordInCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespAddWordInCurrent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespAddWordInCurrent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespAddWordInCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const RespAddWordInCurrent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespAddWordInCurrent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespAddWordInCurrent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespAddWordInCurrent)
    MergeFrom(*source);
  }
}

void RespAddWordInCurrent::MergeFrom(const RespAddWordInCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespAddWordInCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RespAddWordInCurrent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespAddWordInCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespAddWordInCurrent::CopyFrom(const RespAddWordInCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespAddWordInCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespAddWordInCurrent::IsInitialized() const {
  return true;
}

void RespAddWordInCurrent::InternalSwap(RespAddWordInCurrent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespAddWordInCurrent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqRemoveWordFromCurrent::InitAsDefaultInstance() {
}
class ReqRemoveWordFromCurrent::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqRemoveWordFromCurrent>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReqRemoveWordFromCurrent::ReqRemoveWordFromCurrent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqRemoveWordFromCurrent)
}
ReqRemoveWordFromCurrent::ReqRemoveWordFromCurrent(const ReqRemoveWordFromCurrent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:api.ReqRemoveWordFromCurrent)
}

void ReqRemoveWordFromCurrent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqRemoveWordFromCurrent_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReqRemoveWordFromCurrent::~ReqRemoveWordFromCurrent() {
  // @@protoc_insertion_point(destructor:api.ReqRemoveWordFromCurrent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqRemoveWordFromCurrent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqRemoveWordFromCurrent::ArenaDtor(void* object) {
  ReqRemoveWordFromCurrent* _this = reinterpret_cast< ReqRemoveWordFromCurrent* >(object);
  (void)_this;
}
void ReqRemoveWordFromCurrent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqRemoveWordFromCurrent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqRemoveWordFromCurrent& ReqRemoveWordFromCurrent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqRemoveWordFromCurrent_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqRemoveWordFromCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqRemoveWordFromCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqRemoveWordFromCurrent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqRemoveWordFromCurrent.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqRemoveWordFromCurrent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqRemoveWordFromCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqRemoveWordFromCurrent.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqRemoveWordFromCurrent)
  return target;
}

size_t ReqRemoveWordFromCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqRemoveWordFromCurrent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string word = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_word());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqRemoveWordFromCurrent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqRemoveWordFromCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRemoveWordFromCurrent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqRemoveWordFromCurrent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqRemoveWordFromCurrent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqRemoveWordFromCurrent)
    MergeFrom(*source);
  }
}

void ReqRemoveWordFromCurrent::MergeFrom(const ReqRemoveWordFromCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqRemoveWordFromCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_word()) {
    _internal_set_word(from._internal_word());
  }
}

void ReqRemoveWordFromCurrent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqRemoveWordFromCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRemoveWordFromCurrent::CopyFrom(const ReqRemoveWordFromCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqRemoveWordFromCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRemoveWordFromCurrent::IsInitialized() const {
  return true;
}

void ReqRemoveWordFromCurrent::InternalSwap(ReqRemoveWordFromCurrent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqRemoveWordFromCurrent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespRemoveWordFromCurrent::InitAsDefaultInstance() {
}
class RespRemoveWordFromCurrent::_Internal {
 public:
};

RespRemoveWordFromCurrent::RespRemoveWordFromCurrent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespRemoveWordFromCurrent)
}
RespRemoveWordFromCurrent::RespRemoveWordFromCurrent(const RespRemoveWordFromCurrent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespRemoveWordFromCurrent)
}

void RespRemoveWordFromCurrent::SharedCtor() {
}

RespRemoveWordFromCurrent::~RespRemoveWordFromCurrent() {
  // @@protoc_insertion_point(destructor:api.RespRemoveWordFromCurrent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespRemoveWordFromCurrent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespRemoveWordFromCurrent::ArenaDtor(void* object) {
  RespRemoveWordFromCurrent* _this = reinterpret_cast< RespRemoveWordFromCurrent* >(object);
  (void)_this;
}
void RespRemoveWordFromCurrent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespRemoveWordFromCurrent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespRemoveWordFromCurrent& RespRemoveWordFromCurrent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespRemoveWordFromCurrent_proto_2eproto.base);
  return *internal_default_instance();
}


void RespRemoveWordFromCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespRemoveWordFromCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespRemoveWordFromCurrent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespRemoveWordFromCurrent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespRemoveWordFromCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespRemoveWordFromCurrent)
  return target;
}

size_t RespRemoveWordFromCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespRemoveWordFromCurrent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespRemoveWordFromCurrent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespRemoveWordFromCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const RespRemoveWordFromCurrent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespRemoveWordFromCurrent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespRemoveWordFromCurrent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespRemoveWordFromCurrent)
    MergeFrom(*source);
  }
}

void RespRemoveWordFromCurrent::MergeFrom(const RespRemoveWordFromCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespRemoveWordFromCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RespRemoveWordFromCurrent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespRemoveWordFromCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespRemoveWordFromCurrent::CopyFrom(const RespRemoveWordFromCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespRemoveWordFromCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespRemoveWordFromCurrent::IsInitialized() const {
  return true;
}

void RespRemoveWordFromCurrent::InternalSwap(RespRemoveWordFromCurrent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespRemoveWordFromCurrent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqUpdateWordInCurrent::InitAsDefaultInstance() {
}
class ReqUpdateWordInCurrent::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqUpdateWordInCurrent>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_success_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fail_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_last_tm_success(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_tm_fail(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_next_review_tm_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

ReqUpdateWordInCurrent::ReqUpdateWordInCurrent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqUpdateWordInCurrent)
}
ReqUpdateWordInCurrent::ReqUpdateWordInCurrent(const ReqUpdateWordInCurrent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  ::memcpy(&success_count_, &from.success_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_review_tm_ms_) -
    reinterpret_cast<char*>(&success_count_)) + sizeof(next_review_tm_ms_));
  // @@protoc_insertion_point(copy_constructor:api.ReqUpdateWordInCurrent)
}

void ReqUpdateWordInCurrent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqUpdateWordInCurrent_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_review_tm_ms_) -
      reinterpret_cast<char*>(&success_count_)) + sizeof(next_review_tm_ms_));
}

ReqUpdateWordInCurrent::~ReqUpdateWordInCurrent() {
  // @@protoc_insertion_point(destructor:api.ReqUpdateWordInCurrent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqUpdateWordInCurrent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqUpdateWordInCurrent::ArenaDtor(void* object) {
  ReqUpdateWordInCurrent* _this = reinterpret_cast< ReqUpdateWordInCurrent* >(object);
  (void)_this;
}
void ReqUpdateWordInCurrent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqUpdateWordInCurrent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqUpdateWordInCurrent& ReqUpdateWordInCurrent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqUpdateWordInCurrent_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqUpdateWordInCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqUpdateWordInCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&success_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&next_review_tm_ms_) -
        reinterpret_cast<char*>(&success_count_)) + sizeof(next_review_tm_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqUpdateWordInCurrent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqUpdateWordInCurrent.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 success_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_success_count(&has_bits);
          success_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 fail_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fail_count(&has_bits);
          fail_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_tm_success = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_last_tm_success(&has_bits);
          last_tm_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_tm_fail = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_last_tm_fail(&has_bits);
          last_tm_fail_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 next_review_tm_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_next_review_tm_ms(&has_bits);
          next_review_tm_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqUpdateWordInCurrent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqUpdateWordInCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqUpdateWordInCurrent.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  // optional uint32 success_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_success_count(), target);
  }

  // optional uint32 fail_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_fail_count(), target);
  }

  // optional uint64 last_tm_success = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_last_tm_success(), target);
  }

  // optional uint64 last_tm_fail = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_last_tm_fail(), target);
  }

  // optional uint64 next_review_tm_ms = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_next_review_tm_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqUpdateWordInCurrent)
  return target;
}

size_t ReqUpdateWordInCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqUpdateWordInCurrent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string word = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_word());
    }

    // optional uint32 success_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_success_count());
    }

    // optional uint32 fail_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_fail_count());
    }

    // optional uint64 last_tm_success = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_tm_success());
    }

    // optional uint64 last_tm_fail = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_tm_fail());
    }

    // optional uint64 next_review_tm_ms = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_next_review_tm_ms());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqUpdateWordInCurrent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqUpdateWordInCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqUpdateWordInCurrent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqUpdateWordInCurrent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqUpdateWordInCurrent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqUpdateWordInCurrent)
    MergeFrom(*source);
  }
}

void ReqUpdateWordInCurrent::MergeFrom(const ReqUpdateWordInCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqUpdateWordInCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_word(from._internal_word());
    }
    if (cached_has_bits & 0x00000002u) {
      success_count_ = from.success_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      fail_count_ = from.fail_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      last_tm_success_ = from.last_tm_success_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_tm_fail_ = from.last_tm_fail_;
    }
    if (cached_has_bits & 0x00000020u) {
      next_review_tm_ms_ = from.next_review_tm_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqUpdateWordInCurrent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqUpdateWordInCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqUpdateWordInCurrent::CopyFrom(const ReqUpdateWordInCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqUpdateWordInCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqUpdateWordInCurrent::IsInitialized() const {
  return true;
}

void ReqUpdateWordInCurrent::InternalSwap(ReqUpdateWordInCurrent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqUpdateWordInCurrent, next_review_tm_ms_)
      + sizeof(ReqUpdateWordInCurrent::next_review_tm_ms_)
      - PROTOBUF_FIELD_OFFSET(ReqUpdateWordInCurrent, success_count_)>(
          reinterpret_cast<char*>(&success_count_),
          reinterpret_cast<char*>(&other->success_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqUpdateWordInCurrent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespUpdateWordInCurrent::InitAsDefaultInstance() {
}
class RespUpdateWordInCurrent::_Internal {
 public:
};

RespUpdateWordInCurrent::RespUpdateWordInCurrent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespUpdateWordInCurrent)
}
RespUpdateWordInCurrent::RespUpdateWordInCurrent(const RespUpdateWordInCurrent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespUpdateWordInCurrent)
}

void RespUpdateWordInCurrent::SharedCtor() {
}

RespUpdateWordInCurrent::~RespUpdateWordInCurrent() {
  // @@protoc_insertion_point(destructor:api.RespUpdateWordInCurrent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespUpdateWordInCurrent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespUpdateWordInCurrent::ArenaDtor(void* object) {
  RespUpdateWordInCurrent* _this = reinterpret_cast< RespUpdateWordInCurrent* >(object);
  (void)_this;
}
void RespUpdateWordInCurrent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespUpdateWordInCurrent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespUpdateWordInCurrent& RespUpdateWordInCurrent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespUpdateWordInCurrent_proto_2eproto.base);
  return *internal_default_instance();
}


void RespUpdateWordInCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespUpdateWordInCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespUpdateWordInCurrent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespUpdateWordInCurrent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespUpdateWordInCurrent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespUpdateWordInCurrent)
  return target;
}

size_t RespUpdateWordInCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespUpdateWordInCurrent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespUpdateWordInCurrent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespUpdateWordInCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const RespUpdateWordInCurrent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespUpdateWordInCurrent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespUpdateWordInCurrent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespUpdateWordInCurrent)
    MergeFrom(*source);
  }
}

void RespUpdateWordInCurrent::MergeFrom(const RespUpdateWordInCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespUpdateWordInCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RespUpdateWordInCurrent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespUpdateWordInCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespUpdateWordInCurrent::CopyFrom(const RespUpdateWordInCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespUpdateWordInCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespUpdateWordInCurrent::IsInitialized() const {
  return true;
}

void RespUpdateWordInCurrent::InternalSwap(RespUpdateWordInCurrent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespUpdateWordInCurrent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Word::InitAsDefaultInstance() {
}
class Word::_Internal {
 public:
  using HasBits = decltype(std::declval<Word>()._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_frequency(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_json(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_transcript(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Word::Word(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.Word)
}
Word::Word(const Word& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_json()) {
    json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_json(),
      GetArena());
  }
  transcript_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_transcript()) {
    transcript_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_transcript(),
      GetArena());
  }
  frequency_ = from.frequency_;
  // @@protoc_insertion_point(copy_constructor:api.Word)
}

void Word::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Word_proto_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transcript_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frequency_ = PROTOBUF_ULONGLONG(0);
}

Word::~Word() {
  // @@protoc_insertion_point(destructor:api.Word)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Word::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transcript_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Word::ArenaDtor(void* object) {
  Word* _this = reinterpret_cast< Word* >(object);
  (void)_this;
}
void Word::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Word::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Word& Word::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Word_proto_2eproto.base);
  return *internal_default_instance();
}


void Word::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Word)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      value_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      json_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      transcript_.ClearNonDefaultToEmpty();
    }
  }
  frequency_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Word::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.Word.value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 frequency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_frequency(&has_bits);
          frequency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string json = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.Word.json");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string transcript = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_transcript();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.Word.transcript");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Word::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.Word)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.Word.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  // optional uint64 frequency = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_frequency(), target);
  }

  // optional string json = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_json().data(), static_cast<int>(this->_internal_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.Word.json");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_json(), target);
  }

  // optional string transcript = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_transcript().data(), static_cast<int>(this->_internal_transcript().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.Word.transcript");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_transcript(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Word)
  return target;
}

size_t Word::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Word)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value());
    }

    // optional string json = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_json());
    }

    // optional string transcript = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_transcript());
    }

    // optional uint64 frequency = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_frequency());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Word::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Word)
  GOOGLE_DCHECK_NE(&from, this);
  const Word* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Word>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Word)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Word)
    MergeFrom(*source);
  }
}

void Word::MergeFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Word)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_json(from._internal_json());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_transcript(from._internal_transcript());
    }
    if (cached_has_bits & 0x00000008u) {
      frequency_ = from.frequency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Word::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Word::CopyFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Word::IsInitialized() const {
  return true;
}

void Word::InternalSwap(Word* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  json_.Swap(&other->json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transcript_.Swap(&other->transcript_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(frequency_, other->frequency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Word::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqReviewForToday::InitAsDefaultInstance() {
}
class ReqReviewForToday::_Internal {
 public:
};

ReqReviewForToday::ReqReviewForToday(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqReviewForToday)
}
ReqReviewForToday::ReqReviewForToday(const ReqReviewForToday& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.ReqReviewForToday)
}

void ReqReviewForToday::SharedCtor() {
}

ReqReviewForToday::~ReqReviewForToday() {
  // @@protoc_insertion_point(destructor:api.ReqReviewForToday)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqReviewForToday::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReqReviewForToday::ArenaDtor(void* object) {
  ReqReviewForToday* _this = reinterpret_cast< ReqReviewForToday* >(object);
  (void)_this;
}
void ReqReviewForToday::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqReviewForToday::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqReviewForToday& ReqReviewForToday::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqReviewForToday_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqReviewForToday::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqReviewForToday)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqReviewForToday::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqReviewForToday::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqReviewForToday)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqReviewForToday)
  return target;
}

size_t ReqReviewForToday::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqReviewForToday)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqReviewForToday::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqReviewForToday)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqReviewForToday* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqReviewForToday>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqReviewForToday)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqReviewForToday)
    MergeFrom(*source);
  }
}

void ReqReviewForToday::MergeFrom(const ReqReviewForToday& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqReviewForToday)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqReviewForToday::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqReviewForToday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqReviewForToday::CopyFrom(const ReqReviewForToday& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqReviewForToday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqReviewForToday::IsInitialized() const {
  return true;
}

void ReqReviewForToday::InternalSwap(ReqReviewForToday* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqReviewForToday::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespReviewForToday::InitAsDefaultInstance() {
}
class RespReviewForToday::_Internal {
 public:
  using HasBits = decltype(std::declval<RespReviewForToday>()._has_bits_);
  static void set_has_count_all(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RespReviewForToday::RespReviewForToday(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  first_n_word_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespReviewForToday)
}
RespReviewForToday::RespReviewForToday(const RespReviewForToday& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      first_n_word_(from.first_n_word_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  count_all_ = from.count_all_;
  // @@protoc_insertion_point(copy_constructor:api.RespReviewForToday)
}

void RespReviewForToday::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RespReviewForToday_proto_2eproto.base);
  count_all_ = 0u;
}

RespReviewForToday::~RespReviewForToday() {
  // @@protoc_insertion_point(destructor:api.RespReviewForToday)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespReviewForToday::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespReviewForToday::ArenaDtor(void* object) {
  RespReviewForToday* _this = reinterpret_cast< RespReviewForToday* >(object);
  (void)_this;
}
void RespReviewForToday::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespReviewForToday::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespReviewForToday& RespReviewForToday::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespReviewForToday_proto_2eproto.base);
  return *internal_default_instance();
}


void RespReviewForToday::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespReviewForToday)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  first_n_word_.Clear();
  count_all_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespReviewForToday::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .api.WordInReview first_n_word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_first_n_word(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 count_all = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_count_all(&has_bits);
          count_all_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespReviewForToday::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespReviewForToday)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.WordInReview first_n_word = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_first_n_word_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_first_n_word(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_all = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_count_all(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespReviewForToday)
  return target;
}

size_t RespReviewForToday::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespReviewForToday)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.WordInReview first_n_word = 1;
  total_size += 1UL * this->_internal_first_n_word_size();
  for (const auto& msg : this->first_n_word_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 count_all = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count_all());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespReviewForToday::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespReviewForToday)
  GOOGLE_DCHECK_NE(&from, this);
  const RespReviewForToday* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespReviewForToday>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespReviewForToday)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespReviewForToday)
    MergeFrom(*source);
  }
}

void RespReviewForToday::MergeFrom(const RespReviewForToday& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespReviewForToday)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  first_n_word_.MergeFrom(from.first_n_word_);
  if (from._internal_has_count_all()) {
    _internal_set_count_all(from._internal_count_all());
  }
}

void RespReviewForToday::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespReviewForToday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespReviewForToday::CopyFrom(const RespReviewForToday& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespReviewForToday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespReviewForToday::IsInitialized() const {
  return true;
}

void RespReviewForToday::InternalSwap(RespReviewForToday* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  first_n_word_.InternalSwap(&other->first_n_word_);
  swap(count_all_, other->count_all_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespReviewForToday::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqSearchInReviewList::InitAsDefaultInstance() {
}
class ReqSearchInReviewList::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqSearchInReviewList>()._has_bits_);
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_use_success_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ReqSearchInReviewList::ReqSearchInReviewList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqSearchInReviewList)
}
ReqSearchInReviewList::ReqSearchInReviewList(const ReqSearchInReviewList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_success_count_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(use_success_count_));
  // @@protoc_insertion_point(copy_constructor:api.ReqSearchInReviewList)
}

void ReqSearchInReviewList::SharedCtor() {
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_success_count_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(use_success_count_));
}

ReqSearchInReviewList::~ReqSearchInReviewList() {
  // @@protoc_insertion_point(destructor:api.ReqSearchInReviewList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqSearchInReviewList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReqSearchInReviewList::ArenaDtor(void* object) {
  ReqSearchInReviewList* _this = reinterpret_cast< ReqSearchInReviewList* >(object);
  (void)_this;
}
void ReqSearchInReviewList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqSearchInReviewList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqSearchInReviewList& ReqSearchInReviewList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqSearchInReviewList_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqSearchInReviewList::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqSearchInReviewList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&limit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_success_count_) -
        reinterpret_cast<char*>(&limit_)) + sizeof(use_success_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqSearchInReviewList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_limit(&has_bits);
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_offset(&has_bits);
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 use_success_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_use_success_count(&has_bits);
          use_success_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqSearchInReviewList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqSearchInReviewList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 limit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_limit(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_offset(), target);
  }

  // optional uint32 use_success_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_use_success_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqSearchInReviewList)
  return target;
}

size_t ReqSearchInReviewList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqSearchInReviewList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 limit = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_limit());
    }

    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_offset());
    }

    // optional uint32 use_success_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_use_success_count());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqSearchInReviewList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqSearchInReviewList)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqSearchInReviewList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqSearchInReviewList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqSearchInReviewList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqSearchInReviewList)
    MergeFrom(*source);
  }
}

void ReqSearchInReviewList::MergeFrom(const ReqSearchInReviewList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqSearchInReviewList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      use_success_count_ = from.use_success_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqSearchInReviewList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqSearchInReviewList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSearchInReviewList::CopyFrom(const ReqSearchInReviewList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqSearchInReviewList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSearchInReviewList::IsInitialized() const {
  return true;
}

void ReqSearchInReviewList::InternalSwap(ReqSearchInReviewList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqSearchInReviewList, use_success_count_)
      + sizeof(ReqSearchInReviewList::use_success_count_)
      - PROTOBUF_FIELD_OFFSET(ReqSearchInReviewList, limit_)>(
          reinterpret_cast<char*>(&limit_),
          reinterpret_cast<char*>(&other->limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqSearchInReviewList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespSearchInReviewList::InitAsDefaultInstance() {
}
class RespSearchInReviewList::_Internal {
 public:
};

RespSearchInReviewList::RespSearchInReviewList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  word_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespSearchInReviewList)
}
RespSearchInReviewList::RespSearchInReviewList(const RespSearchInReviewList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      word_(from.word_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespSearchInReviewList)
}

void RespSearchInReviewList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RespSearchInReviewList_proto_2eproto.base);
}

RespSearchInReviewList::~RespSearchInReviewList() {
  // @@protoc_insertion_point(destructor:api.RespSearchInReviewList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespSearchInReviewList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespSearchInReviewList::ArenaDtor(void* object) {
  RespSearchInReviewList* _this = reinterpret_cast< RespSearchInReviewList* >(object);
  (void)_this;
}
void RespSearchInReviewList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespSearchInReviewList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespSearchInReviewList& RespSearchInReviewList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespSearchInReviewList_proto_2eproto.base);
  return *internal_default_instance();
}


void RespSearchInReviewList::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespSearchInReviewList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespSearchInReviewList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .api.WordInReview word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_word(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespSearchInReviewList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespSearchInReviewList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.WordInReview word = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_word_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_word(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespSearchInReviewList)
  return target;
}

size_t RespSearchInReviewList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespSearchInReviewList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .api.WordInReview word = 1;
  total_size += 1UL * this->_internal_word_size();
  for (const auto& msg : this->word_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespSearchInReviewList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespSearchInReviewList)
  GOOGLE_DCHECK_NE(&from, this);
  const RespSearchInReviewList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespSearchInReviewList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespSearchInReviewList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespSearchInReviewList)
    MergeFrom(*source);
  }
}

void RespSearchInReviewList::MergeFrom(const RespSearchInReviewList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespSearchInReviewList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  word_.MergeFrom(from.word_);
}

void RespSearchInReviewList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespSearchInReviewList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespSearchInReviewList::CopyFrom(const RespSearchInReviewList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespSearchInReviewList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespSearchInReviewList::IsInitialized() const {
  return true;
}

void RespSearchInReviewList::InternalSwap(RespSearchInReviewList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  word_.InternalSwap(&other->word_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespSearchInReviewList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqDeleteProfile::InitAsDefaultInstance() {
}
class ReqDeleteProfile::_Internal {
 public:
};

ReqDeleteProfile::ReqDeleteProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqDeleteProfile)
}
ReqDeleteProfile::ReqDeleteProfile(const ReqDeleteProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.ReqDeleteProfile)
}

void ReqDeleteProfile::SharedCtor() {
}

ReqDeleteProfile::~ReqDeleteProfile() {
  // @@protoc_insertion_point(destructor:api.ReqDeleteProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqDeleteProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReqDeleteProfile::ArenaDtor(void* object) {
  ReqDeleteProfile* _this = reinterpret_cast< ReqDeleteProfile* >(object);
  (void)_this;
}
void ReqDeleteProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqDeleteProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqDeleteProfile& ReqDeleteProfile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqDeleteProfile_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqDeleteProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqDeleteProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqDeleteProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqDeleteProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqDeleteProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqDeleteProfile)
  return target;
}

size_t ReqDeleteProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqDeleteProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqDeleteProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqDeleteProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqDeleteProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqDeleteProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqDeleteProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqDeleteProfile)
    MergeFrom(*source);
  }
}

void ReqDeleteProfile::MergeFrom(const ReqDeleteProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqDeleteProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqDeleteProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqDeleteProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqDeleteProfile::CopyFrom(const ReqDeleteProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqDeleteProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqDeleteProfile::IsInitialized() const {
  return true;
}

void ReqDeleteProfile::InternalSwap(ReqDeleteProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqDeleteProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespDeleteProfile::InitAsDefaultInstance() {
}
class RespDeleteProfile::_Internal {
 public:
};

RespDeleteProfile::RespDeleteProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespDeleteProfile)
}
RespDeleteProfile::RespDeleteProfile(const RespDeleteProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespDeleteProfile)
}

void RespDeleteProfile::SharedCtor() {
}

RespDeleteProfile::~RespDeleteProfile() {
  // @@protoc_insertion_point(destructor:api.RespDeleteProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespDeleteProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespDeleteProfile::ArenaDtor(void* object) {
  RespDeleteProfile* _this = reinterpret_cast< RespDeleteProfile* >(object);
  (void)_this;
}
void RespDeleteProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespDeleteProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespDeleteProfile& RespDeleteProfile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespDeleteProfile_proto_2eproto.base);
  return *internal_default_instance();
}


void RespDeleteProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespDeleteProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespDeleteProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespDeleteProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespDeleteProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespDeleteProfile)
  return target;
}

size_t RespDeleteProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespDeleteProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespDeleteProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespDeleteProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const RespDeleteProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespDeleteProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespDeleteProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespDeleteProfile)
    MergeFrom(*source);
  }
}

void RespDeleteProfile::MergeFrom(const RespDeleteProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespDeleteProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RespDeleteProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespDeleteProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespDeleteProfile::CopyFrom(const RespDeleteProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespDeleteProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespDeleteProfile::IsInitialized() const {
  return true;
}

void RespDeleteProfile::InternalSwap(RespDeleteProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespDeleteProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqSentences::InitAsDefaultInstance() {
}
class ReqSentences::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqSentences>()._has_bits_);
  static void set_has_word(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ReqSentences::ReqSentences(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.ReqSentences)
}
ReqSentences::ReqSentences(const ReqSentences& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_word()) {
    word_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_word(),
      GetArena());
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:api.ReqSentences)
}

void ReqSentences::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReqSentences_proto_2eproto.base);
  word_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(offset_));
}

ReqSentences::~ReqSentences() {
  // @@protoc_insertion_point(destructor:api.ReqSentences)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReqSentences::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  word_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReqSentences::ArenaDtor(void* object) {
  ReqSentences* _this = reinterpret_cast< ReqSentences* >(object);
  (void)_this;
}
void ReqSentences::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReqSentences::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqSentences& ReqSentences::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqSentences_proto_2eproto.base);
  return *internal_default_instance();
}


void ReqSentences::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ReqSentences)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    word_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&limit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&limit_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqSentences::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.ReqSentences.word");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_limit(&has_bits);
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 offset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_offset(&has_bits);
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqSentences::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.ReqSentences)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string word = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.ReqSentences.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  // optional uint32 limit = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_limit(), target);
  }

  // optional uint32 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ReqSentences)
  return target;
}

size_t ReqSentences::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ReqSentences)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string word = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_word());
    }

    // optional uint32 limit = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_limit());
    }

    // optional uint32 offset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_offset());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqSentences::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ReqSentences)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqSentences* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqSentences>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ReqSentences)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ReqSentences)
    MergeFrom(*source);
  }
}

void ReqSentences::MergeFrom(const ReqSentences& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ReqSentences)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_word(from._internal_word());
    }
    if (cached_has_bits & 0x00000002u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqSentences::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ReqSentences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSentences::CopyFrom(const ReqSentences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ReqSentences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSentences::IsInitialized() const {
  return true;
}

void ReqSentences::InternalSwap(ReqSentences* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  word_.Swap(&other->word_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqSentences, offset_)
      + sizeof(ReqSentences::offset_)
      - PROTOBUF_FIELD_OFFSET(ReqSentences, limit_)>(
          reinterpret_cast<char*>(&limit_),
          reinterpret_cast<char*>(&other->limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqSentences::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespSentences::InitAsDefaultInstance() {
}
class RespSentences::_Internal {
 public:
};

RespSentences::RespSentences(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespSentences)
}
RespSentences::RespSentences(const RespSentences& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.RespSentences)
}

void RespSentences::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RespSentences_proto_2eproto.base);
}

RespSentences::~RespSentences() {
  // @@protoc_insertion_point(destructor:api.RespSentences)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespSentences::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespSentences::ArenaDtor(void* object) {
  RespSentences* _this = reinterpret_cast< RespSentences* >(object);
  (void)_this;
}
void RespSentences::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespSentences::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespSentences& RespSentences::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespSentences_proto_2eproto.base);
  return *internal_default_instance();
}


void RespSentences::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespSentences)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespSentences::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_data();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "api.RespSentences.data");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespSentences::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespSentences)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
    const auto& s = this->_internal_data(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "api.RespSentences.data");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespSentences)
  return target;
}

size_t RespSentences::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespSentences)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(data_.size());
  for (int i = 0, n = data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      data_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespSentences::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespSentences)
  GOOGLE_DCHECK_NE(&from, this);
  const RespSentences* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespSentences>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespSentences)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespSentences)
    MergeFrom(*source);
  }
}

void RespSentences::MergeFrom(const RespSentences& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespSentences)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void RespSentences::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespSentences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespSentences::CopyFrom(const RespSentences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespSentences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespSentences::IsInitialized() const {
  return true;
}

void RespSentences::InternalSwap(RespSentences* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespSentences::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RespDefault::InitAsDefaultInstance() {
}
class RespDefault::_Internal {
 public:
  using HasBits = decltype(std::declval<RespDefault>()._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RespDefault::RespDefault(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.RespDefault)
}
RespDefault::RespDefault(const RespDefault& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:api.RespDefault)
}

void RespDefault::SharedCtor() {
  value_ = false;
}

RespDefault::~RespDefault() {
  // @@protoc_insertion_point(destructor:api.RespDefault)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RespDefault::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RespDefault::ArenaDtor(void* object) {
  RespDefault* _this = reinterpret_cast< RespDefault* >(object);
  (void)_this;
}
void RespDefault::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RespDefault::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RespDefault& RespDefault::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RespDefault_proto_2eproto.base);
  return *internal_default_instance();
}


void RespDefault::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RespDefault)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespDefault::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_value(&has_bits);
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RespDefault::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.RespDefault)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RespDefault)
  return target;
}

size_t RespDefault::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RespDefault)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RespDefault::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RespDefault)
  GOOGLE_DCHECK_NE(&from, this);
  const RespDefault* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RespDefault>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RespDefault)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RespDefault)
    MergeFrom(*source);
  }
}

void RespDefault::MergeFrom(const RespDefault& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RespDefault)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _internal_set_value(from._internal_value());
  }
}

void RespDefault::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RespDefault)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespDefault::CopyFrom(const RespDefault& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RespDefault)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespDefault::IsInitialized() const {
  return true;
}

void RespDefault::InternalSwap(RespDefault* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespDefault::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::api::InitParams* Arena::CreateMaybeMessage< ::api::InitParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::InitParams >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqRecentWords* Arena::CreateMaybeMessage< ::api::ReqRecentWords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqRecentWords >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespRecentWords* Arena::CreateMaybeMessage< ::api::RespRecentWords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespRecentWords >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqSearchWords* Arena::CreateMaybeMessage< ::api::ReqSearchWords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqSearchWords >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespSearchWords* Arena::CreateMaybeMessage< ::api::RespSearchWords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespSearchWords >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqRandWords* Arena::CreateMaybeMessage< ::api::ReqRandWords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqRandWords >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespRandWords* Arena::CreateMaybeMessage< ::api::RespRandWords >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespRandWords >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqWordInReview* Arena::CreateMaybeMessage< ::api::ReqWordInReview >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqWordInReview >(arena);
}
template<> PROTOBUF_NOINLINE ::api::WordInReview* Arena::CreateMaybeMessage< ::api::WordInReview >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::WordInReview >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqAddWordInReview* Arena::CreateMaybeMessage< ::api::ReqAddWordInReview >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqAddWordInReview >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespAddWordInCurrent* Arena::CreateMaybeMessage< ::api::RespAddWordInCurrent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespAddWordInCurrent >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqRemoveWordFromCurrent* Arena::CreateMaybeMessage< ::api::ReqRemoveWordFromCurrent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqRemoveWordFromCurrent >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespRemoveWordFromCurrent* Arena::CreateMaybeMessage< ::api::RespRemoveWordFromCurrent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespRemoveWordFromCurrent >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqUpdateWordInCurrent* Arena::CreateMaybeMessage< ::api::ReqUpdateWordInCurrent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqUpdateWordInCurrent >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespUpdateWordInCurrent* Arena::CreateMaybeMessage< ::api::RespUpdateWordInCurrent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespUpdateWordInCurrent >(arena);
}
template<> PROTOBUF_NOINLINE ::api::Word* Arena::CreateMaybeMessage< ::api::Word >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::Word >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqReviewForToday* Arena::CreateMaybeMessage< ::api::ReqReviewForToday >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqReviewForToday >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespReviewForToday* Arena::CreateMaybeMessage< ::api::RespReviewForToday >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespReviewForToday >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqSearchInReviewList* Arena::CreateMaybeMessage< ::api::ReqSearchInReviewList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqSearchInReviewList >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespSearchInReviewList* Arena::CreateMaybeMessage< ::api::RespSearchInReviewList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespSearchInReviewList >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqDeleteProfile* Arena::CreateMaybeMessage< ::api::ReqDeleteProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqDeleteProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespDeleteProfile* Arena::CreateMaybeMessage< ::api::RespDeleteProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespDeleteProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::api::ReqSentences* Arena::CreateMaybeMessage< ::api::ReqSentences >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::ReqSentences >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespSentences* Arena::CreateMaybeMessage< ::api::RespSentences >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespSentences >(arena);
}
template<> PROTOBUF_NOINLINE ::api::RespDefault* Arena::CreateMaybeMessage< ::api::RespDefault >(Arena* arena) {
  return Arena::CreateMessageInternal< ::api::RespDefault >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
